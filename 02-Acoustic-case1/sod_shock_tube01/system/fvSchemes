/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
    //default         CrankNicolson 0.9;
    //default         backward;
}

gradSchemes
{
    //default         Gauss linear;
    default         leastSquares;
    //default         cellMDLimited Gauss linear 1;
    //default         cellLimited Gauss linear 1;

    //grad(U)         cellLimited<cubic> 1.5 Gauss linear 1;
    //grad(U)         cellLimited Gauss linear 1;
    grad(U)         cellLimited leastSquares 1;
}

divSchemes
{
    default         none;

    //div(phi,U)      Gauss linearUpwind default;
    //div(phi,U)      Gauss linear;
    //div(phi,U)      Gauss upwind;
    //div(phi,U)      Gauss vanLeerV;
    div(phi,U)      Gauss MinmodV;
    //div(phi,U)      Gauss QUICK;
    //div(phi,U)      Gauss SuperBeeV;

/*
    div(phid,p)     Gauss limitedLinear 1;
    div(phiv,p)     Gauss limitedLinear 1;
    div(phi,K)      Gauss limitedLinear 1;
    div(phi,e)      Gauss limitedLinear 1;
*/

    energy1 limitedLinear 1;
    energy2 linear;
    energy3 upwind;

    div(phi,K)      Gauss $energy1;

    //div(phi,e)      Gauss $energy1;
    //div(phiv,p)     Gauss $energy1;	//in internal energy

    div(phi,h)      Gauss $energy1;
    div(phid,p)     Gauss $energy1;	//in enthalpy and internal energy

    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear 1;
}

laplacianSchemes
{
    //default         Gauss linear uncorrected;
    default         Gauss linear limited 1;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    //default         uncorrected;
    default         limited 1;
}

// ************************************************************************* //
