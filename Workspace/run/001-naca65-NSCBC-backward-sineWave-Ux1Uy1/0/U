/*--------------------------------*- C++ -*----------------------------------* \
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

Uinlet          (1 1 0);

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform $Uinlet;

boundaryField
{
    INLET
    {
	type            codedMixed;
        refValue        uniform (0 0 0);
        refGradient     uniform (0 0 0);
        valueFraction   uniform 1;
        value           uniform (0 0 0);
        name            rampedMixed;
        code            #{
            const scalar t = this->db().time().value();
            const scalar pi = constant::mathematical::pi;

            const scalar frequency_=3000;
            const vector amplitude_=vector(1, 1, 0);
            const vector level_=vector(1, 1, 0);

            const scalar scale_=1;
            this->refValue() =
                amplitude_*sin(2*pi*frequency_*t)*exp(-sqr(t-0.0028)/0.0000018) + level_;
            this->refGrad() = Zero;
            this->valueFraction() = 1.0;
        #};
        //type            pressureDirectedInletVelocity;
        //inletDirection  uniform (0.574648212 0.8184 0);    //angle=40
        //value           uniform (82 97 0);
    }
    OUTLET
    {
        type            inletOutlet;
        inletValue      uniform $Uinlet;
        value           uniform $Uinlet;
        
        //type            inletOutlet;
        //inletValue      uniform (0 0 0);
        //value           uniform (0 0 0);

    }
    PER1
    {
        type            cyclicAMI;
        value $internalField;
        //value           uniform (0 0 0);
    }
    PER2
    {
        type            cyclicAMI;
        value $internalField;
        //value           uniform (0 0 0);
    }
    OUTLET
    {
       // type            inletOutlet;
       // inletValue      uniform $Uinlet;
       // value           uniform $Uinlet;
        type            velocityOutletNSCBCx;
        pInf            1e5;
        gamma           1.4;
        etaAc           1;
        fieldInf        (1 0 0);
        lInf            1;
        value           uniform $Uinlet;        

    }
    BLADE
    {
        type            noSlip;
    }
    frontAndBackPlanes
    {
        type            empty;
    }
}

// ************************************************************************* //
